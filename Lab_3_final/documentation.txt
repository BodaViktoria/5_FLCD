SymbolTable

Representation:
The symbol table contains, in its representation, a list and the size of the list, in which the elements will be place.
At each position of the table there is a list of elements, since if two different constants/variables are hashed to the
same symbol table index, they all can be stored. Thus, an element which is included in the symbol table, is represented
by two indices, one showing the index of the list in which the element is stored, and the second one shows the position
of the element in the specific list.
I chose to implement the symbol table with the data structure hash table. The hash function consists of the sum of the
ASCII codes of the characters of the constant/identifier, modulo the size of the list.

Operations:
- insert(key): returns the index of the element, whether it was already stored or not
- remove(key): -
- return_index(key): returns the two indices which show the exact location of the specific key in the ST
- hash(key): returns the index of the ST list in which the element will be placed
- __str__ (overridden operation): returns the string representation of the ST
